version: '3.3'

services:

  reverse-proxy:
    image: traefik  # The official Traefik docker image
    container_name: traefik
    command: --api --docker --docker.watch --accesslogsfile=/dev/stdout --logLevel=DEBUG  # Enables the web UI and tells Tr√¶fik to listen to docker
    ports:
      - "81:80"      # The HTTP port
      - "8880:8080"  # The Web UI (enabled by --api)
    networks:
      - internal
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # So that Traefik can listen to the Docker events
    labels:  
      - "traefik.frontend.rule=Host:observer.docker.localhost"
      - "traefik.port=81"

  prometheus:
    image: voronenko/nanoobserver:prometheus.20180914
    volumes:
      - prometheus_data:/var/lib/prometheus
    networks:
      - internal
      - proxy
    ports:
      - 9090:9090
    labels:
      - "traefik.frontend.rule=Host:traefik.docker.localhost"

  pushgateway:
    image: voronenko/nanoobserver:pushgateway.20180914
    networks:
      - internal
      - proxy
    ports:
      - 9091:9091
    labels:
      - "traefik.enabled=true"
      - "traefik.backend=pushgateway"
      - "traefik.docker.network=proxy"
      - "traefik.frontend.rule=Host:observer.docker.localhost; PathPrefixStrip: /push"
#      - "traefik.port=9091"

  nodeexporter:
    image: voronenko/nanoobserver:nodeexporter.20180914
    hostname: '{{.Node.ID}}'
    volumes:
      - /proc:/usr/proc
      - /sys:/usr/sys
      - /:/rootfs
    networks:
      - internal
      - proxy
    cap_add:
      - SYS_TIME
    ports:
      - 9100:9100

  alertmanager:
    image: voronenko/nanoobserver:alertmanager.20180914
    volumes:    
       - /etc/localtime:/etc/localtime:ro
    networks:
      - internal
      - proxy
    ports:
      - 9093:9093
      - 9094:9094

  grafana:
    image: voronenko/nanoobserver:grafana.20180914
    volumes:
      - grafana_data:/var/lib/grafana/data/grafana.db
    env_file:
      - z-box-example/conf/grafana/grafana.config
    networks:
      - internal
      - proxy
    ports:
      - 3000:3000

  cadvisor:
    image: google/cadvisor
    hostname: '{{.Node.ID}}'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - internal
      - proxy
    ports:
      - 8080:8080

networks:
  proxy:
    external: true
  internal:
    external: false

volumes:
    prometheus_data:
    grafana_data:
